#!/bin/bash

CAN_SYNC=('ui' 'ui-raw' 'fonts' 'gfx' 'txt' 'export' 'music' 'sfx' 'backgrounds' 'backgrounds-raw')
DROPBOX_DIR="$HOME/Dropbox"
DROPBOX_ASSET_DIR="$DROPBOX_DIR/Voider/Voider - editable resources/internal_resources"
DROPBOX_UI_RAW_DIR="$DROPBOX_ASSET_DIR/ui-editable"
GIT_SUB_DIR="$GIT_DIR/game"
GIT_UI_RAW_DIR="$GIT_SUB_DIR/ui"
GIT_ASSET_DIR="$GIT_SUB_DIR/src/Voider/android/assets"

usage() {
cat << EOF
Usage: $0 [ui/gfx/txt/export/music/sfx/backgrounds/ui-raw/backgrounds-raw]
When not specifying anything all are synced from the dropbox directory to the git folder

Options:
	-h, --help
		Displays this text
EOF
}


syncing=()

containsElement() {
	local e
	for e in "${@:2}"; do [[ "$e" == "$1" ]] && return 0; done
	return 1
}

# Parse the arguments
while [ -n "$*" ]; do
	case $1 in
	-h)
		usage
		exit 1
		;;
	--help)
		usage
		exit 1
		;;
	*)
		containsElement "$1" "${CAN_SYNC[@]}"
		if [ $? -eq 0 ]; then
			syncing+=("$1")
		fi
		;;

	esac

	shift
done

# If no sync elements were passed add all
if [ ${#syncing[@]} -eq 0 ]; then
	syncing=( "${CAN_SYNC[@]}" )
fi

# echo "Syncing array:"
# printf -- '%s\n' "${syncing[@]}"


syncUiRaw() {
	for dir in "$DROPBOX_UI_RAW_DIR/"*
	do
		ui_name=$(basename "$dir")
		rm -rf "$GIT_UI_RAW_DIR/$ui_name"
		cp -rv "$dir" "$GIT_UI_RAW_DIR"
	done
}

syncBackgroundsRaw() {
	dir="$GIT_UI_RAW_DIR/backgrounds"
	rm -rf "$dir"
	cp -rv "$DROPBOX_ASSET_DIR/backgrounds-editable" "$dir"
}

syncFiles() {
	rm -rv "$GIT_ASSET_DIR/$1"
	cp -rv "$DROPBOX_ASSET_DIR/$1" "$GIT_ASSET_DIR"
}

for sync_object in "${syncing[@]}"
do
	# UI raw is a special case
	if [ "$sync_object" = "ui-raw" ]; then
		syncUiRaw
	# Background raw
	elif [ "$sync_object" = "backgrounds-raw" ]; then
		syncBackgroundsRaw
	# The rest are just folders
	else
		syncFiles "$sync_object"
	fi
done
