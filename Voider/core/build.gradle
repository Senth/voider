apply plugin: "java"

[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

sourceSets.main.java.srcDirs = ["src/"]

dependencies {
    compile project(":network")
    compile project(":common-utils")
    compile 'com.esotericsoftware:minlog:1.3.0'
    compile "com.badlogicgames.gdx:gdx:$gdxVersion"
    compile "com.badlogicgames.gdx:gdx-box2d:$gdxVersion"
    compile "com.badlogicgames.gdx:gdx-freetype:$gdxVersion"
    compile "org.ini4j:ini4j-openbeans:0.5.5-SNAPSHOT"
    compile "edu.gvsu.cis.masl:java-channels:$jaccVersion"
    compile "com.esotericsoftware:kryo:$kryoVersion"
    compile "com.badlogicgames.gdx:gdx-sqlite:$gdxSqliteVersion"
    compile "com.spiddekauga.kryo:kryo-utils:$kryoUtilsVersion"
    compile "com.spiddekauga.http:http-url-utils:$httpUrlUtilsVersion"
}

task setBuildNightlyDev << {
    replaceBuildName("NIGHTLY_DEV")
}

task setBuildNightlyRelease << {
    replaceBuildName("NIGHTLY_RELEASE")
}

task setBuildBeta << {
    replaceBuildName("BETA")
}

task setBuildRelease << {
    replaceBuildName("RELEASE")
}

// Ordering
project.compileJava.mustRunAfter setBuildRelease
project.compileJava.mustRunAfter setBuildBeta
project.compileJava.mustRunAfter setBuildNightlyDev
project.compileJava.mustRunAfter setBuildNightlyRelease

def replaceBuildName(nextBuild) {
    def filename = "src/com/spiddekauga/voider/Config.java";
    def fromString = "BUILD = Builds.*;"
    def toString = "BUILD = Builds." + nextBuild + ";"
    File configFile = file(filename)
    def updatedContent = configFile.getText('UTF-8').replaceAll(fromString, toString)
    configFile.write(updatedContent, 'UTF-8')
}