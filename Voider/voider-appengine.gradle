import java.nio.file.Files
import java.nio.file.Paths
import java.nio.file.StandardCopyOption

dependencies {
//    appengineSdk "com.google.appengine:appengine-java-sdk:$appengineVersion"
    providedCompile 'javax.servlet:servlet-api:2.5'
    compile "com.google.appengine:appengine:$appengineVersion"
    compile project(':server-common')
}

appengine {
    run {
        port = 8888
        jvmFlags = ["-Ddatastore.backing_store=$projectDir.absolutePath/appengine-generated/local_db.bin", "-Xdebug", "-Xrunjdwp:transport=dt_socket,address=1044,server=y,suspend=y"]
    }

    tools.cloudSdkHome = new File(cloudSdkDir)
}

[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

def prepareAppengine() {
    updateAppengineVersion()
    if (project.name.equals("server-api")) {
        copyChangelog()
    }
}

def copyChangelog() {
    // These should be relative to the asset folders
    def COPY_THESE = ['txt/changelog.txt']
    def ANDROID_ASSET_DIR = project.parent.projectDir.absolutePath + "/android/assets/"
    def SERVER_ASSET_DIR = projectDir.absolutePath + "/src/main/webapp/assets/"

    COPY_THESE.each {
        def copyFrom = Paths.get(ANDROID_ASSET_DIR + it)
        def copyTo = Paths.get(SERVER_ASSET_DIR + it)
        def copyToDir = copyTo.getParent()
        Files.createDirectories(copyToDir)
        Files.copy(copyFrom, copyTo, StandardCopyOption.REPLACE_EXISTING);
    }
}

def updateAppengineVersion() {
    appengine.deploy.version = project.version
}

def updateApplicationId(applicationId) {
    appengine.deploy.project = applicationId
}

// --------------------
// Fix AppEngine Tasks
// --------------------
task setAppengineDev(dependsOn: ['explodeWar']) << {
    prepareAppengine()
    updateApplicationId('voider-dev')
}

task setAppengineNightly(dependsOn: ['explodeWar']) << {
    prepareAppengine()
    updateApplicationId('voider-nightly')
}

task setAppengineBeta(dependsOn: ['explodeWar']) << {
    prepareAppengine()
    updateApplicationId('voider-beta')
}

task setAppengineRelease(dependsOn: ['explodeWar']) << {
    prepareAppengine()
    updateApplicationId('voider-thegame')
}

// Ordering
project.appengineDeploy.mustRunAfter setAppengineDev
project.appengineDeploy.mustRunAfter setAppengineBeta
project.appengineDeploy.mustRunAfter setAppengineNightly
project.appengineDeploy.mustRunAfter setAppengineRelease